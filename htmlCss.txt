html - язык разметки (создает видимые элементы)
css - дает стили для html (создаёт стили элементам)
codePen - интернет страница позволяющая одновременно писать сайты и просматривать их
developer,mozilla,org  - поиск при задании в конце запроса "MDN"
<h1></h1> - h2, h3 до h6- размер шрифта
<br> - не требует закрытия добавляет одну пустую строку (отступ как при нажатии enter)
<hr> - добавить горизонтальную черту
<hr size="8" noshade width="400"> - у команд есть атрибуты, они перечисляются без запятой, значения задаются в кавычках. поиск атрибутов выполнять через сайт developer mozilla
<!DOCTYPE html> (не закрывается)<html> <head> <body> (на странице отображается только то, что есть в команде body) - структура html
<html lang="en"> - выбор написания англиского языка на странице. для русского будет "ru"
<title> - название документа
<meta charset="UTF-8" /> - щадание кодировки страницы в формате UTF-8, что позволяет верно отображаться тексту на разных языках
<meta http-equiv="X-UA-Compatible" content="IE=edge" /> - позволяет запустить страницу в боаузере Internet explorer
<meta name="viewport" content="width=device-width, initial-scale=1.0" /> - ширина страницы подбирается под используемое устройство (компьютер, телевизор, телефон и т д)
<meta name="keywords" content="html, course, css, tags"> - ключевые слова для поисковиков
<meta name="descriptions" content="Это базовый куср по HTML"> - описание при выдаче сайта в поисковике
ctrl+/ - тэг для преобразования команды в комментарий, который не выполняется программой
lorem - большой бессмысленный текст (можно прописать количество выгружаемых слов в команде, например lorem20)
<p> - параграф, он выделяет тескт в отдельный абзац, без него следующий текст продолжится сразу по окончанию предыдущего без новой строки и отступов
<em> - курсив
<stromg> - жирный текст
<a href="https://google.com">google</a> - href - дает возможность прописать ссылку, а то, что между А значение, при нажатии на которое мы перейдем по прописанной ссылке
 <a href="https://google.com" target="_blank">google in new tab</a> - targer blank - открывает ссылку в новом окне
<a href="01_text.html">open text in html</a> - ccылка на файл
<img
      src="https://upload.wikimedia.org/wikipedia/commons/thumb/6/61/HTML5_logo_and_wordmark.svg/1200px-HTML5_logo_and_wordmark.svg.png"
      width="150" 
      alt="здесь лежит картинка по HTML"
    /> - Добавление картинки на страницу src - ведет на ссылку картинки в web, width - уменьшает размер картинки, alt - выводит текст вместо картинки, если она по каким-либо причинам не загрузилась, если картинка загрузится, то текст не будет отображаться
    <img src="/images/HTML5.png" width="150" /> локальная загрузка картинки. scr - вызывает картинку из папки images

<ul> - списки
<li>Элемент 1</li>
</ul> - не нумерованные списки, где li - каждый новый элемент списка
<ol>
<li>Элемент 1</li>
</ol> - нумерованные списки, где li - каждый новый элемент списка
ul>li{Element $}*5 - упрощенное написание списка из 5 элементов каждый из которых называется Element c порядковым номером

<table> - таблицы
      <thead> - шапка
        <tr> - 1-я строка
          <th>Имя</th> - th для шапки
          <th>Возраст</th>
          <th>Работа</th>
        </tr>
      </thead>
      <tbody> - тело таблицы
        <tr> - 2-я строка
          <td>Владилен</td> - каждая Td это последующий столбец
          <td>28</td>
          <td>Блогер</td>
        </tr>
        <tr>
          <td>Максим</td>
          <td>34</td>
          <td>Разработчик</td>
        </tr>
      </tbody>
    </table>

Формы

<form> - Задание формы в HTML
      <div> - Отдельная строка
        <label for="text2">Текст</label> - вставить текст перед окном формы for должно совпадать с id
        <input type="text" id="text2" value="Текст по умолчанию" readonly /> - вывести форму ввода Value - текст в форме заполненным по умолчанию readonly - форма только для чтения
      </div>
      <div>
        <label for="Email">Email</label> 
        <input type="email" id="Email" placeholder="Введите email" /> -вывести форму email placeholder - серая строка в форме, пропадает при вводе в форму текста
      </div>
      <div>
        <label for="password">Password</label>
        <input type="password" id="password" /> - форма password - скрывает вводимый текст
      </div>
      <div>
        <label for="number">number</label>
        <input type="number" id="number" /> - форма имеет возможность переключать числа на +\- 1
      </div>
      <div>
        <label for="Range">Range</label>
        <input type="range" id="Range" min="0" max="10" step="1" /> - форма передвигающегося ползунка min max range - цена деления
      </div>
      <div>
        <label for="date">date</label>
        <input type="date" id="date" /> - форма вывода даты
      </div>
      <div>
        <label for="color">color</label>
        <input type="color" id="color" /> - форма выбора цвета
      </div>
      <div>
        <label for="message">Message</label>
        <textarea id="message" cols="15" rows="10"></textarea> - вывод формы ввода текста с большими свободными границами cols - ширина rows - высота
      </div>
      <div>
        <label for="sex">Ваш пол</label>
        <select id="sex"> - поле ввода выбора пола
          <option value="male" selected>Мужчина</option> - значения всплывающих вариантов для выбора selected - значение по умолчанию
          <option value="female">Женщина</option>
          <option value="other">Другое</option>
        </select>
      </div>
      <div>
        <label>Количество работ</label>
        <input type="radio" name="work" /> 1 - radio - выбор одного варианта из предложенных для этого все варианты надо обьединить в одну группу при помощи name
        <input type="radio" name="work" /> 2
        <input type="radio" name="work" /> 5
        <input type="radio" name="work" /> 10+
      </div>
      <div>
        <label>Любимая еда</label>
        <input type="checkbox" name="food" /> картошка - checkbox - позволяет выбрать из списка много нужных пунктов. name -  так же обьединяет варианты выбора в одну группу
        <input type="checkbox" name="food" /> хлеб
        <input type="checkbox" name="food" /> яблоко
        <input type="checkbox" name="food" /> молюски
      </div>
      <div>
        <input type="submit" value="Отправить форму" /> - input - позволяет вывести кнопку отправить форму
      </div>
      <div>
        <button type="submit">Отправить форму</button> - button альтернативный, чаще применяемый способ вызвать кнопку отправить
      </div>
    </form>

    Блоки

    <div id="Block 1" class="card header"> - div выделяет часть сайта в отдельный блок с нового абзаца
      <h3>Block 1</h3>
      <p>
        Lorem ipsum dolor sit amet consectetur adipisicing elit.
        <span class="color"> Dolorem, obcaecati?</span> - span - выделяет часть текста в отдельный блок без абзаца. При этом данному блоку можно присвоить ID или class. class можно группировать у отдельных блоков могут быть одинаковые классы. а вот  id = должен иметь только один блок, повторять для другого блока такй же ID нельзя.
        В разделе head странице сайта под title можно создать <style> что даст нам возможность через (.card {
        background-color: #eee;
        padding: 10px;
        margin-bottom: 10px;
      }) .название класса задать его параметры, цвет и т д
      </p>
    </div>
    сокращенный вызов
    div.list - Создать div c классом list
    div#list - Создать div c id list
    аналогично создаются классы и ID для span. ol. ul и т д

    симантика

    вместо div применяется header - для заголовка, nav - для навигатора, article - для отдельных блоков и группы этих блоков выделяются в section, footer - для нижней части, aside - для боковых меню. в остальном это те же абзацы.


    css

    h1 { - задать объект, к которому относится стиль
  color: red;  - цвет шрифта
  font-size: 50px; - размер шрифта
  letter-spacing: 4px; - расстояние между буквами
  border-bottom: 2px solid black; - подчеркнуть линией текст, указать толщину черты
}
body {
  background: blue; - фон страницы 
}


cпособ прописать css - inline - непосредственно в строке кода html - <header style="border: 1px solid grey">
                     - ccлкой в head html - <link rel="stylesheet" href="01_selectors.css" />, где 01_selectors - название html файла
                     - в head html - <style>
      body {
        background: #ddd;
      }
      header {
        color: blueviolet;
      }
    </style>


    /* name  */ - Прописывается в CSS, /* - комментарий

body { - body - по имени, задать свойства в body, если body задано по стилю и в html и в css, то применится стиль из css
  background: rgb(100, 238, 231); - цвет фона
}
/* class */

.card { - задание по классу
  padding: 10px; - отступ
  background: #fff; - задний фон
  /* margin-bottom: 10px; */ - отступ от следующего загаловка
}

.card p { - можно задавать стили отдельно параграфу класса
   font-size: 14px; - размер шрифта
}

.html { - в html class можно задать сразу двумя и более словами, например "card html", тогда у данной части будет 2 стиля. соответственно мы можем обращаться к любому из стилей
   background: orange;
  color: white; - цвет букв
}
.css {
  background: blue;
  color: white;
}
/* id */

#header { - вызывать по заданному id можно при помощи #
  background: #ddd;
  padding: 10px;
}

#header,
.html p,
.css,
.card { - можно задавать стили группам, перечисляя из через запятую, при этом можно писать как id, так и классы и отдельные парагафы классов и т д
  margin-bottom: 10px;
}
* -  применяет стиль ко всему в html странице

devtools - в браузере chrome нажать правой кнопкой мыши выбрать самое нижнее меню, можно просмотреть код, отредактировать его. изменения не сохранятся и пропадут при обновлении страницы, но можно онлайн посмотреть к чему приведут различные изменения

@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap'); - сайт google fonts там можно найти нужный шрифт и по ссылке или по такой сноске импортировать его на наш сайт

body {
  font-family: 'Roboto' sans-serif; - перечисление шрифтов через запятую, если один не работает включается следующий, можно указать сколь угодно много
  font-size: 18px; - размер шрифта
  line-height: 1.6em; - ширина загаловка
  font-weight: normal; - толщина текста, можно в числах 400 - нормальный, 900 - жирный bold
  /* text-decoration: underline; - подчеркнуть текст
  text-decoration: line-through;*/ - зачеркнуть текст
  /* font: normal 20px 'Roboto', self-serif; */ через font: можно задавать сразу несколько параметров, ширину, размер, шрифты. ширина и размер - через пробел, шрифты - через запятую
  font-style: italic; - курсив
  letter-spacing: 5px; - расстояние между буквами
  word-spacing: 20px; - расстояние между словами
}

/* .css p { - можно задавать параметры как для всей страницы через body так и для отдельного загаловка
  font-size: 20px;
  font-family: Verdana;
  font-weight: bold;
} */

задание цвета

 color: darkmagenta; - название цвета

  color: #000000; - заданием номера RGB в 16-ричной системе, где 0 - минимум, F - макусимум. 000000 - черный ffffff - белый

  color: #ddd; - аналогично короткое описание

  color: rgb(0, 255, 0); - задание RGB числами от 0 до 255
  /* opacity: 0.2; (0-1)*/ - задание прозрачности шрифта

  color: rgba(255, 0, 0, 0.5); - или одновременно с прозрачностью. значение прозрачности так же в пределах 0-1

  в поиске google  в строке кода на картинках можно найти значение transparent - в котором найти палитру с пипеткой и при помощи нее найти значение необходимых нам цветов

  Границы

  /* border-width: 2px; - ширина границы вокруг текста
  border-style: dashed; - граница выполнена пунктирной линией solid - сплошной
  border-color: red; */ - цвет линии
  border: 2px solid darkred; - можно эти параметры задать одной строкой
  border-style: dashed; - следующие одинаковые параметры меняют свойство ранее записанные
  border-radius: 50px; - скругление углов, так же значения можно задавать в %
}
.border-2 {
  border-bottom: 2px solid darkblue; - только нижняя граница и ее свойства
  border-right: 6px solid green; - правая аналогично
  border-bottom-right-radius: 10px; - скругление только одного угла
  /* border-top */ - верхняя граница
}
.border-3 {
  border-left: 6px solid red;
  background: lightsalmon; - заливка всей области, не важно где проходит линия границы, но закругленные углы не заливает
  padding-left: 10px; - отступ от левого края
  color: #fff;  - цвет текста
}

.circle {
  width: 50px; - создание круга - ширина границы
  height: 50px; - высота границы
  background: green; - заливка области
  border-radius: 50%; скругление
}

BOX MODEL

    <style> -  в разделе head задаём style
      * {  - * задает стиль для всего документа
        margin: 0; - изначально в html странице есть значения margin padding но мы можем их обнулить
        padding: 0;
      }
      body {
        margin: 0; - обнулить значения всех элементов в body, так как h1, h2, h3, p и т д так же имеют значения margin по умолчанию
      }
      .container { - задание значений для отдельного класса, который прописывается в div
        max-width: 750px; - задание значения максимальной ширины объекта, так он будет на компьютере, например 750, а на телефоне меньше
        margin: auto; - установка элемента по середине
      }
      .box {
        background: darkorchid; - цвет заливки класса
        color: #fff; - цвет текста
        padding: 15px; - отступ внутри элемента по всем сторонам 15
        /* padding: 15px 40px; top+bottom; left+right */ - отступ для верха низа и права лево
        /* padding: 15px 40px 25px 30px; top, right, bottom, left */ 2 варианта задачи индивидуального отступа для каждой стороны
        /* padding-top: 15px;
        padding-right: 40px;
        padding-bottom: 25px;
        padding-left: 30px; */
        border: 4px solid red; - задание границ элемента (толщина, сплошная линия, цвет)
        margin: 10px; - margin задается так же как и padding
        margin-bottom: 20px; - последующее задание 
      }
      .blocks {
        width: 100%; - ширина 100% от заданной ширины экрана
        box-shadow: 4px 4px 4px rgba(0, 0, 0, 0.25) - тень от изображения, элемента. первые 4рх 4рх - это размер и уклон тени. третий 4рх - рассеивание тени. далее цвет
      }
      .blocks .block {
        width: 25%; - разбить максимальную ширину экрана (в нашем случае заданную 750, на 4 части, полученное значение присвоить классу по ширине)
        background: #000; - заливка черная
        height: 50px; - высота элементов класса 50
        float: left; - распологать элементы не сверху вниз а слева направо друг за другом
        border: 4px solid green; - граница элемента 4 сплошная зелёная
        box-sizing: border-box; /* content-box */ - размер элемента считать border учитывая величину границы, content -  не учитывая границу, по умолчанию - границы не учитываются
      }
    </style>
  </head>

  кнопки и ссылки

  a { - для всех ссылок
  color: #333; - цвет со стандартного синего изменить на серый
  text-decoration: none; - убрать стандартное подчеркивание
  transition: all 0.2s; - плавный переход интерактивных функций
}

a:hover { - интерактив. при наведении :
  color: orange; - поменять цвет ссылки на оранжевый
  /*font-size: 2rem;*/ - изменить размер шрифта на больший
}

a:visited {
  color: red; - нажатую сылку отметить красным
}

a:active {
  color: blue; - при нажатии на ссылку и удержании сделать её синей
}

.css:hover {
  background: red; - .css - это класс hover - это интерактив. при наведении поменять элемент класса на элемент с красной заливкой
}
<p><a href="#" class="btn">Это очень важная ссылка</a></p> - задание ссылки в html
      <p>
        <button class="btn">Это кнопка!</button> - задание кнопки в html
      </p>
.btn { - класс кнопок
  background: #111; - заливка кнопки серая
  padding: 15px 20px; - размер кнопки
  color: #fff; - цвет шрифта белый
  border: none; - нет границы по контуру
  cursor: pointer; - при наведении курсор изменить на палец
  border-radius: 5px; - скруглить углы кнопки
  font-family: inherit; - перенять стили кнопки от шрифта страницы (нормально работает на ссылках класса кнопки, на кнопке - криво)
}

.btn:hover { - при наведении на кнопку
  opacity: 0.8; - сделать её прозрачной на 80%
  color: orange; - цвет кнопки сделать оранжевым
}


ul>li(lorem2)*5 - создать списко из 5 строк по 2 слова

(tr>(td{$})*5)*6 - создать таблицу на 5 столбцов и на 6 строк
 ul>(li>a{item $})*5 -задание 5 ссылок

списки, таблицы
 
.list { -обнулить стили списка, убрать точки перед пунктами
  margin: 0;
  padding: 0;
  list-style: none;
}

.list li { - стили строк
  margin-bottom: 8px; - отступ снизу
  border-bottom: 1px solid grey; - подчёркивание снизу
}

.table { - таблица на всю ширину
  width: 100%;
}

.table td {  - формат строк
  text-align: center; /* left, right */ - разместить текст в центре (слева, справа)
  padding-bottom: 10px; - отступ строк снизу 
}

.table td:hover {
  background: #eeefff; - при наведении на ячейку закрасить серым
}

/* .table tr:nth-child(even) {
  background: #eee; - чётные строки сделать с серой заливкой
} */
.table tr:nth-child(odd) {
  background: #eee; - нечётные строки сделать с серой заливкой
}
.table td:nth-child(2),
.table td:nth-child(4) {
  background: green; - столбцы 2 и 4 закрасить зелёным
}

.navbar { - ссылки
  background: lightcoral; - цвет заливки
  /* padding: 10px 20px; */
  margin-bottom: 10px; - отступ снизу
}

.navbar ul {
  list-style: none; - ссылки не подчёркивать
  margin: 0; - убрать отступы
  padding: 0;
  display: flex; расположить не друг под другом снизу вверх, а слева направо
  padding: 0px 20px; отступ справа и слева текста от предыдущей сслыки
}

.navbar ul li {
  margin-right: 10px; - отступ ссылок друг от друга 10 справа
  padding: 10px;
}

.navbar ul li:hover {
  background: #ea6767; - при наведении на ссылку поменять её заливку
}

.navbar ul li:last-child {
margin-right: 0;
} - у последней ссылки (с самого правого края) убрать отступ справа